"use strict";(()=>{var a={};a.id=593,a.ids=[593],a.modules={1747:(a,b,c)=>{let d;c.d(b,{tU:()=>f,Ay:()=>e});let e=d=new(require("@prisma/client")).PrismaClient,f=async a=>d.mention.create({data:a})},3884:(a,b,c)=>{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>q});var d={};c.r(d),c.d(d,{default:()=>k});var e=c(9046),f=c(8667),g=c(3480),h=c(6435),i=c(1747);let j={};async function k(a,b){if(function(a){let b=Date.now();return!j[a]||b-j[a].last>6e4?(j[a]={count:1,last:b},!1):(j[a].count++,j[a].last=b,j[a].count>30)}(a.headers["x-forwarded-for"]?.toString()||a.socket.remoteAddress||""))return b.status(429).json({error:"Rate limit exceeded"});try{let{dateFrom:c,dateTo:d,platform:e,sentiment:f}=a.query,g={};(c||d)&&(g.timestamp={},c&&(g.timestamp.gte=new Date(c)),d&&(g.timestamp.lte=new Date(d))),e&&"All"!==e&&(g.platform=e),f&&"all"!==f&&(g.sentiment=f);let h=await i.Ay.mention.count({where:g}),j=await i.Ay.mention.count({where:{...g,sentiment:"positive"}}),k=await i.Ay.mention.count({where:{...g,sentiment:"neutral"}}),l=await i.Ay.mention.count({where:{...g,sentiment:"negative"}}),m=await i.Ay.$queryRawUnsafe("SELECT strftime('%H:00', timestamp) as hour, COUNT(*) as value FROM Mention WHERE timestamp >= ? AND timestamp <= ? GROUP BY hour ORDER BY hour",c||"1970-01-01",d||new Date().toISOString());b.status(200).json({metrics:{totalMentions:h,sentiment:{positive:j,neutral:k,negative:l}},mentionVolume:m})}catch(a){b.status(500).json({error:a.message})}}var l=c(8112),m=c(8766);let n=(0,h.M)(d,"default"),o=(0,h.M)(d,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/analytics",pathname:"/api/analytics",bundlePath:"",filename:""},userland:d,distDir:".next",projectDir:""});async function q(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/analytics"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,l.getTracer)(),e=d.getActiveScopeSpan(),i=p.instrumentationOnRequestError.bind(p),j=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/analytics",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await j(e):await d.withPropagatedContext(a.headers,()=>d.trace(m.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:l.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},j))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=3884));module.exports=c})();